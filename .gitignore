# --- .gitignore for Python Web Development ---
#
# This file is a template and should be customized to your project's needs.
# Lines starting with '#' are comments.
#
# For more information about .gitignore syntax:
# https://git-scm.com/docs/gitignore
#
# ---
# 1. Virtual Environments
# ---
# Never commit your virtual environment folders.
# These are specific to your local machine and can be recreated using a requirements file.
# Common names include venv, env, .venv, .env, etc.
# The .Python pattern is for some specific tools like Visual Studio.
venv/
env/
.venv/
.env/
.*/
*.Python

# ---
# 2. Python Bytecode and Cache
# ---
# Python generates bytecode files (.pyc) and cache folders (__pycache__) during execution.
# These are not needed in the repository as they can be regenerated.
# .pyo are optimized bytecode files.
# .pyd are Windows DLL files for Python extensions.
# .Python-eggs/ and .egg-info/ are related to older Python packaging formats.
# Caches for tools like pytest and mypy.
__pycache__/
*.pyc
*.pyo
*.pyd
.Python-eggs/
*.egg-info/
.pytest_cache/
.mypy_cache/
.dmypy.json
dmypy.json

# ---
# 3. IDE and Editor Configuration
# ---
# Configuration files and directories created by common Integrated Development Environments (IDEs)
# and text editors. These are usually specific to a user's local setup.
.vscode/
.idea/
*.sublime-project
*.sublime-workspace
.project
.settings/
*.tmproj
*.nbproject/ # NetBeans
*.bak # General editor backup
*.komodoproject # Komodo Edit

# ---
# 4. Operating System Specific Files
# ---
# Files generated by operating systems that are not relevant to the project.
# .DS_Store: macOS folder metadata
# Thumbs.db: Windows image thumbnail cache
# desktop.ini: Windows folder customization
.DS_Store
Thumbs.db
desktop.ini
ehthumbs.db # Windows Media Center
*.Spotlight-V100 # macOS Spotlight indexing
*.Trashes # macOS Trash
._* # macOS resource forks

# ---
# 5. Build Artifacts and Distribution Files
# ---
# Files and directories created during the build and distribution process.
# These are typically generated and should not be version controlled.
build/
dist/
*.egg
wheels/
pip-wheel-metadata/
develop-eggs/
sdist/
MANIFEST
*.tar.gz
*.zip
*.whl

# ---
# 6. Log Files
# ---
# Log files can grow large and often contain sensitive information or environment-specific details.
# It's better to configure logging appropriately for different environments.
*.log
logs/
*.log.[0-9] # Rotated log files

# ---
# 7. Secrets and Sensitive Configuration
# ---
# !!! IMPORTANT !!!
# NEVER COMMIT SECRETS, API KEYS, PASSWORDS, OR OTHER SENSITIVE CONFIGURATION FILES.
# Use environment variables, a secrets management tool (like HashiCorp Vault, AWS Secrets Manager,
# Google Secret Manager), or configuration files that are NOT committed to the repository.
#
# The patterns below are common names for files that might contain secrets.
# If you use these filenames for non-sensitive local development configuration,
# ensure they do not contain production secrets.
#
# Consider creating a template file (e.g., .env.example) that IS committed,
# which developers can copy and fill with their local secrets.

*.env
.env.*
credentials.json
secrets.yaml
secrets.yml
config.json # If it contains secrets
instance/ # Common in Flask for instance-specific configuration, often sensitive.

# Example for an .env.example file (commit this instead of .env)
# .env.example

# ---
# 8. Temporary Files and Backups
# ---
# Temporary files, swap files, and backup files created by various tools or editors.
*~
*.bak
*.swp
*.tmp
*.swo # Vim swap file
*.swn # Vim swap file

# ---
# 9. Testing Frameworks Specific Files
# ---
# Files generated by testing frameworks, such as coverage reports.
.coverage
coverage.xml
htmlcov/
nosetests.xml
.tox/ # tox virtual environments and logs
junit*.xml
report*.xml

# ---
# 10. Framework-Specific Considerations
# ---
# Add or uncomment rules relevant to the specific web framework(s) you are using.
#
# --- Django ---
# If you are using Django, you might want to ignore the following:
#
# db.sqlite3 # Default SQLite database for local development.
             # Do not commit if it's for local dev only.
             # For production, use a more robust database and manage its data separately.
# db.sqlite3-journal # SQLite journal file

# media/     # If you store user-uploaded files here locally and don't want them in the repo.
             # Production media files should typically be stored in cloud storage (e.g., S3).

# static_collected/ # Or your STATIC_ROOT setting.
                    # These are files collected by `collectstatic` and are usually regenerated.
                    # Some deployment strategies might require these to be committed, so evaluate your needs.
# *.mo       # Compiled translation files (if generating them during build/deploy)
# locale/*/LC_MESSAGES/*.po~ # Backup translation files

# --- Flask ---
# The 'instance/' folder is a common pattern in Flask for instance-specific configuration,
# which may include secrets or runtime files not suitable for version control.
# It's already listed under "Secrets and Sensitive Configuration" but reiterated here for Flask context.
# instance/

# If using Flask-Migrate or Alembic for database migrations:
# alembic.ini # If it contains sensitive DB connection strings for local dev only
# migrations/versions/*.pyc # Alembic generates pyc files here

# --- FastAPI ---
# FastAPI projects generally follow standard Python project structures.
# Most common ignores are already covered above.
# Pay attention to any auto-generated files specific to your FastAPI project setup or extensions.
# For example, if you generate API client SDKs locally:
# generated_client/

# --- Other Tools ---
#
# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Celery specific
# *.pid # Celerybeat pid file
# celerybeat-schedule # Celerybeat schedule file

# --- User-Specific ---
# Add any other project-specific files or directories that should be ignored below.
# For example:
# my_local_scratch_files/
# output_data/